if (!has("nvim"))
    if filereadable(expand("~/.vim/plugrc"))
        source ~/.vim/plugrc
    endif
endif

syntax on
set background=dark
let g:hybrid_custom_term_colors = 1
let g:hybrid_reduced_contrast = 1

try
    colorscheme hybrid
catch /:E185:/
    "Silently ignore if colorscheme not found.
endtry

filetype on
filetype plugin on

set number
set tabstop=2
set expandtab
set shiftwidth=4
filetype plugin indent on

"dont highlight search results
set nohlsearch

"highlight search results as you type
set incsearch

"Display whitespace characters
set encoding=utf-8
set magic
set listchars=tab:│\ ,trail:·
set list

:noremap <Up> <NOP>
:noremap <Down> <NOP>
:noremap <Left> <NOP>
:noremap <Right> <NOP>

"nvim terminal esc
if(has("nvim"))
    :tnoremap <Esc> <C-\><C-n>
endif

"move up and down by visual lines
nnoremap j gj
nnoremap k gk
vnoremap j gj
vnoremap k gk

"Faster movements
nmap J 5j
nmap K 5k
vmap J 5j
vmap K 5k
nmap T <C-u>
nmap B <C-d>

"Switch splits faster
:nnoremap <C-h> <C-w>h
:nnoremap <C-j> <C-w>j
:nnoremap <C-k> <C-w>k
:nnoremap <C-l> <C-w>l
if(has("nvim")) 
    :tnoremap <C-h> <C-\><C-n><C-w>h
    :tnoremap <C-j> <C-\><C-n><C-w>j
    :tnoremap <C-k> <C-\><C-n><C-w>k
    :tnoremap <C-l> <C-\><C-n><C-w>l
endif

"go to cmd mode more easily
nnoremap ; :

"change leader from \ to ,
let mapleader = ","

"page down and page up the easy way
nnoremap <leader>f <C-f>
nnoremap <leader>b <C-b>

"quickly edit/reload the vimrc file
nmap <silent> <leader>ev :e $MYVIMRC<CR>
nmap <silent> <leader>sv :so $MYVIMRC<CR>

"clears the search highlights
nmap <silent> <leader>/ :nohlsearch<CR>

"alternative for `;` since `;` is mapped to `:`
"this line needs to be after changing the leader from \
nnoremap \ ;

:vmap <leader>y "+y
:nmap <leader>p "+p

function! StrikeOff() 
    normal ys$<del>
endfunction

nnoremap <leader>d :call StrikeOff()<CR>

set wildignore+=*.class,*.pyc,*.iml

let g:ycm_autoclose_preview_window_after_insertion = 1
let g:ycm_autoclose_preview_window_after_completion = 1

let g:vim_markdown_folding_disabled=1

let g:neomake_javascript_enabled_makers = ['eslint']
let g:neomake_javascript_eslint_exe = $PWD .'/node_modules/.bin/eslint'
autocmd! BufWritePost * Neomake
nmap <Leader><Space>n :lnext<CR>

"Auto save for markdown files
function! TurnOnAutoSave()
    let g:auto_save = 1
    let g:auto_save_silent = 1
    set noswapfile
endfunction
au BufNewFile,BufRead *.md call TurnOnAutoSave()
